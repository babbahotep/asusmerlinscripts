#!/bin/bash
# ./backuphost.sh user hostip

user=$1
host=$2
echo "user:" "$1" "and" "host ip:" "$2"

# sync Config
echo "Sync Config on ESXI host" 
sshx $user@$host vim-cmd hostsvc/firmware/sync_config

# create backup archive and download
#ipaddr=$(hostname -i)
stamp=`date '+%Y_%m_%d'`
echo "date" $stamp
sleep 3
echo "Backup and download ESXI host config"
URL=$(sshx $user@$host vim-cmd hostsvc/firmware/backup_config)
path="$(echo $URL | cut -d "*" -f 2)"
proto=$(echo $URL | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*")
xfile=$(echo "${URL##*/}")
xfile2=$(echo $stamp"_"$host"__"$xfile)
hosturl=$(echo $proto$host$path)
echo "date" $stamp
echo "datefile" $xfile2
sleep 3

#echo $host
#echo "1" $hosturl
#echo "2" $proto$host$path
#echo "3" $xfile
wget --no-check-certificate --continue $hosturl -O $xfile
echo "new file name" $xfile2
sleep 3
mv -f $xfile $xfile2

#scp $xfile admin@192.168.1.1:/jffs/esxiscripts


#extract URL
# Extract the protocol (includes trailing "://").
#PARSED_PROTO="$(echo $PROJECT_URL | sed -nr 's,^(.*://).*,\1,p')"

# Remove the protocol from the URL.
#PARSED_URL="$(echo ${PROJECT_URL/$PARSED_PROTO/})"

# Extract the user (includes trailing "@").
#PARSED_USER="$(echo $PARSED_URL | sed -nr 's,^(.*@).*,\1,p')"

# Remove the user from the URL.
#PARSED_URL="$(echo ${PARSED_URL/$PARSED_USER/})"

# Extract the port (includes leading ":").
#PARSED_PORT="$(echo $PARSED_URL | sed -nr 's,.*(:[0-9]+).*,\1,p')"

# Remove the port from the URL.
#PARSED_URL="$(echo ${PARSED_URL/$PARSED_PORT/})"

# Extract the path (includes leading "/" or ":").
#PARSED_PATH="$(echo $PARSED_URL | sed -nr 's,[^/:]*([/:].*),\1,p')"

# Remove the path from the URL.
#PARSED_HOST="$(echo ${PARSED_URL/$PARSED_PATH/})"

ls -al | grep config*

#echo "url" $PARSED_URL
#echo $PARSED_URL
#echo "path" $PARSEDPATH
#echo 
#echo
#echo

exit
